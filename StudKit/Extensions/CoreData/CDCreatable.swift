//
//  StudApp—Stud.IP to Go
//  Copyright © 2018, Steffen Ryll
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program. If not, see http://www.gnu.org/licenses/.
//

import CoreData

/// Something that can be created in a core data context, usually an `NSManagedObject`.
public protocol CDCreatable {
    /// Creates this object in the context given.
    ///
    /// - Parameter context: Managed object context.
    /// - Remarks: Default constructor generated by `NSManagedObject`.
    /// - Warning: When creating objects, use `init(createIn:)` instead as it may contain additional initilization logic.
    init(context: NSManagedObjectContext)

    /// Creates this object in the context given.
    ///
    /// - Parameter context: Managed object context.
    init(createIn context: NSManagedObjectContext)
}

// MARK: - Default Implementation

extension CDCreatable {
    public init(createIn context: NSManagedObjectContext) {
        self.init(context: context)
    }
}

// MARK: - Utilities

extension CDCreatable where Self: NSManagedObject {
    /// Specifies that this object should be removed from its persistent store when changes are committed. When changes are
    /// committed, the object will be removed from the uniquing tables. If object has not yet been saved to a persistent store,
    /// it is simply removed from `context`.
    ///
    /// - Parameter context: Managed object context.
    func delete(in context: NSManagedObjectContext) {
        context.delete(self)
    }
}
